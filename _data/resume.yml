- company: DIRECTV
  location: Remote (El Segundo, CA)
  position: Software Engineer
  length-of-employment: 05/2021 - 02/2025
  responsibilities:
    - Developed and maintained 15+ synchronous and asynchronous distributed backend REST API microservices using Java Spring Boot framework and Go to process data pipelines for 10,00+ users in an agile environment, delivering efficient, scalable, and stable microservices optimized for high performance.
    - Enhanced code scalability and maintainability by leveraging interfaces in Java and Go, enabling seamless refactoring and extension of functionalities. This approach streamlined development, reduced technical debt, and ensured efficient integration of new features while maintaining code reliability and testability.
    - Engineered reusable Java libraries implemented across 5+ services, reducing development time by 10% and minimizing bugs. Improved code efficiency, streamlined integration, and enhanced productivity for the development team, ensuring faster and more reliable software delivery.
    - Enhanced debugging efficiency by 10% by developing a Java microservice that systematically stores Excel and CSV input files into appropriately named S3 buckets based on predefined naming conventions, including timestamps and source identifiers. This ensured quick file retrieval, minimized misplacements, and streamlined data processing for downstream teams.
    - Engineered Goâ€™s Sarama Async Producer and Consumer to asynchronously produce 1,000+ daily JSON messages and process 1,000+ Kafka messages within consumer groups, creating seamless, reusable integration components that improved system efficiency.
    - Increased input parsing and processing efficiency by 10% by developing and optimizing 6+ Java and Go microservices to seamlessly parse JSON, XML, and CSV data, enabling faster and more reliable data handling.
    - Leveraged GitHub Copilot AI (Artificial Intelligence) to generate 500+ lines of relevant code and applied AI-driven automation for unit and functional tests, accelerating development speed, increasing test coverage to 90%+, and enhancing code reliability.
    - Optimized database performance by developing a Go-based CRUD library with Object-Relational Mapping (ORM) for DynamoDB, achieving sub-second query execution, faster data retrieval, and improved system responsiveness for high-traffic applications.
    - Built AWS cloud solutions, including Lambda functions and DynamoDB for data processing by handling 1,000+ daily item transactions, boosting data processing efficiency, scalable and reliable storage, and optimized overall system performance.
    - Developed and deployed Python automation scripts to streamline 10+ critical actions and resolve real-time production issues during on-call rotations, cutting manual workload, improving system reliability, and speeding up incident response times in high-demand environments.
    - Developed a Go microservice with GraphQL to fetch and convert external data and store it in S3, improving data processing efficiency, seamless storage and retrieval, and reliable system accessibility for downstream services.
    - Accelerated deployment workflows and reduced downtime by leveraging Git, Maven, Jenkins CI/CD, Spinnaker, and Kubernetes to automate deployment of 30+ services, increasing issue resolution speed and production environment stability.
    - Migrated 5+ microservices to AWS IAM roles by removing static credentials, enhancing security, reducing maintenance efforts, and streamlining authentication management for long-term efficiency.
    - Implemented Test-Driven Development (TDD) for 20+ unit tests on service modifications by maintaining 90%+ test coverage, improving code quality, test reliability, and reducing risk of regressions in production-ready systems.
    - Leveraged Git for source control to track changes and shared 20+ code enhancements with engineers, leading to improved collaboration, optimized performance, and maintained code integrity across teams.
    - Improved data processing efficiency by developing custom Object-Relational Mappings (ORMs) for Couchbase NoSQL in Java and Go. Reduced query latency by 30%, enabling faster data retrieval and enhanced performance for high-traffic Java and Go microservices.
    - Enabled seamless data flow by developing services that efficiently processed gigabytes of data daily, ensuring reliable input and output across internal teams. This resulted in a bug-free overall system that enhanced cross-team collaboration and improved overall data accuracy.
